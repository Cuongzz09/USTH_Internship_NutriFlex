// Generated by view binder compiler. Do not edit!
package com.nutriflex.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.nutriflex.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDailyNutritionBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CardView cardBreakfast;

  @NonNull
  public final CardView cardDinner;

  @NonNull
  public final CardView cardLunch;

  @NonNull
  public final CardView cardNutrition;

  @NonNull
  public final LinearProgressIndicator progressCalories;

  @NonNull
  public final TextView tvBreakfastCalories;

  @NonNull
  public final TextView tvBreakfastMeal;

  @NonNull
  public final TextView tvBreakfastTime;

  @NonNull
  public final TextView tvDinnerCalories;

  @NonNull
  public final TextView tvDinnerMeal;

  @NonNull
  public final TextView tvDinnerTime;

  @NonNull
  public final TextView tvLunchCalories;

  @NonNull
  public final TextView tvLunchMeal;

  @NonNull
  public final TextView tvLunchTime;

  @NonNull
  public final TextView tvMacros;

  @NonNull
  public final TextView tvMealTitle;

  @NonNull
  public final TextView tvNutritionTitle;

  @NonNull
  public final TextView tvTotalCalories;

  private FragmentDailyNutritionBinding(@NonNull NestedScrollView rootView,
      @NonNull CardView cardBreakfast, @NonNull CardView cardDinner, @NonNull CardView cardLunch,
      @NonNull CardView cardNutrition, @NonNull LinearProgressIndicator progressCalories,
      @NonNull TextView tvBreakfastCalories, @NonNull TextView tvBreakfastMeal,
      @NonNull TextView tvBreakfastTime, @NonNull TextView tvDinnerCalories,
      @NonNull TextView tvDinnerMeal, @NonNull TextView tvDinnerTime,
      @NonNull TextView tvLunchCalories, @NonNull TextView tvLunchMeal,
      @NonNull TextView tvLunchTime, @NonNull TextView tvMacros, @NonNull TextView tvMealTitle,
      @NonNull TextView tvNutritionTitle, @NonNull TextView tvTotalCalories) {
    this.rootView = rootView;
    this.cardBreakfast = cardBreakfast;
    this.cardDinner = cardDinner;
    this.cardLunch = cardLunch;
    this.cardNutrition = cardNutrition;
    this.progressCalories = progressCalories;
    this.tvBreakfastCalories = tvBreakfastCalories;
    this.tvBreakfastMeal = tvBreakfastMeal;
    this.tvBreakfastTime = tvBreakfastTime;
    this.tvDinnerCalories = tvDinnerCalories;
    this.tvDinnerMeal = tvDinnerMeal;
    this.tvDinnerTime = tvDinnerTime;
    this.tvLunchCalories = tvLunchCalories;
    this.tvLunchMeal = tvLunchMeal;
    this.tvLunchTime = tvLunchTime;
    this.tvMacros = tvMacros;
    this.tvMealTitle = tvMealTitle;
    this.tvNutritionTitle = tvNutritionTitle;
    this.tvTotalCalories = tvTotalCalories;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDailyNutritionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDailyNutritionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_daily_nutrition, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDailyNutritionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardBreakfast;
      CardView cardBreakfast = ViewBindings.findChildViewById(rootView, id);
      if (cardBreakfast == null) {
        break missingId;
      }

      id = R.id.cardDinner;
      CardView cardDinner = ViewBindings.findChildViewById(rootView, id);
      if (cardDinner == null) {
        break missingId;
      }

      id = R.id.cardLunch;
      CardView cardLunch = ViewBindings.findChildViewById(rootView, id);
      if (cardLunch == null) {
        break missingId;
      }

      id = R.id.cardNutrition;
      CardView cardNutrition = ViewBindings.findChildViewById(rootView, id);
      if (cardNutrition == null) {
        break missingId;
      }

      id = R.id.progressCalories;
      LinearProgressIndicator progressCalories = ViewBindings.findChildViewById(rootView, id);
      if (progressCalories == null) {
        break missingId;
      }

      id = R.id.tvBreakfastCalories;
      TextView tvBreakfastCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvBreakfastCalories == null) {
        break missingId;
      }

      id = R.id.tvBreakfastMeal;
      TextView tvBreakfastMeal = ViewBindings.findChildViewById(rootView, id);
      if (tvBreakfastMeal == null) {
        break missingId;
      }

      id = R.id.tvBreakfastTime;
      TextView tvBreakfastTime = ViewBindings.findChildViewById(rootView, id);
      if (tvBreakfastTime == null) {
        break missingId;
      }

      id = R.id.tvDinnerCalories;
      TextView tvDinnerCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvDinnerCalories == null) {
        break missingId;
      }

      id = R.id.tvDinnerMeal;
      TextView tvDinnerMeal = ViewBindings.findChildViewById(rootView, id);
      if (tvDinnerMeal == null) {
        break missingId;
      }

      id = R.id.tvDinnerTime;
      TextView tvDinnerTime = ViewBindings.findChildViewById(rootView, id);
      if (tvDinnerTime == null) {
        break missingId;
      }

      id = R.id.tvLunchCalories;
      TextView tvLunchCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvLunchCalories == null) {
        break missingId;
      }

      id = R.id.tvLunchMeal;
      TextView tvLunchMeal = ViewBindings.findChildViewById(rootView, id);
      if (tvLunchMeal == null) {
        break missingId;
      }

      id = R.id.tvLunchTime;
      TextView tvLunchTime = ViewBindings.findChildViewById(rootView, id);
      if (tvLunchTime == null) {
        break missingId;
      }

      id = R.id.tvMacros;
      TextView tvMacros = ViewBindings.findChildViewById(rootView, id);
      if (tvMacros == null) {
        break missingId;
      }

      id = R.id.tvMealTitle;
      TextView tvMealTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMealTitle == null) {
        break missingId;
      }

      id = R.id.tvNutritionTitle;
      TextView tvNutritionTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNutritionTitle == null) {
        break missingId;
      }

      id = R.id.tvTotalCalories;
      TextView tvTotalCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalCalories == null) {
        break missingId;
      }

      return new FragmentDailyNutritionBinding((NestedScrollView) rootView, cardBreakfast,
          cardDinner, cardLunch, cardNutrition, progressCalories, tvBreakfastCalories,
          tvBreakfastMeal, tvBreakfastTime, tvDinnerCalories, tvDinnerMeal, tvDinnerTime,
          tvLunchCalories, tvLunchMeal, tvLunchTime, tvMacros, tvMealTitle, tvNutritionTitle,
          tvTotalCalories);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
