// Generated by view binder compiler. Do not edit!
package com.nutriflex.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.nutriflex.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentKcalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TabLayout tabLayoutKcal;

  @NonNull
  public final ViewPager2 viewPagerKcal;

  private FragmentKcalBinding(@NonNull LinearLayout rootView, @NonNull TabLayout tabLayoutKcal,
      @NonNull ViewPager2 viewPagerKcal) {
    this.rootView = rootView;
    this.tabLayoutKcal = tabLayoutKcal;
    this.viewPagerKcal = viewPagerKcal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentKcalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentKcalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_kcal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentKcalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tabLayoutKcal;
      TabLayout tabLayoutKcal = ViewBindings.findChildViewById(rootView, id);
      if (tabLayoutKcal == null) {
        break missingId;
      }

      id = R.id.viewPagerKcal;
      ViewPager2 viewPagerKcal = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerKcal == null) {
        break missingId;
      }

      return new FragmentKcalBinding((LinearLayout) rootView, tabLayoutKcal, viewPagerKcal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
