// Generated by view binder compiler. Do not edit!
package com.nutriflex.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.nutriflex.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHealthBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CardView cardBMI;

  @NonNull
  public final CardView cardHeight;

  @NonNull
  public final CardView cardWeight;

  @NonNull
  public final LinearProgressIndicator progressBMI;

  @NonNull
  public final RecyclerView rvHealthGoals;

  @NonNull
  public final RecyclerView rvHealthHistory;

  @NonNull
  public final TextView tvBMI;

  @NonNull
  public final TextView tvBMICategory;

  @NonNull
  public final TextView tvHealthGoalsTitle;

  @NonNull
  public final TextView tvHealthHistoryTitle;

  @NonNull
  public final TextView tvHealthMetricsTitle;

  @NonNull
  public final TextView tvHeight;

  @NonNull
  public final TextView tvWeight;

  private FragmentHealthBinding(@NonNull NestedScrollView rootView, @NonNull CardView cardBMI,
      @NonNull CardView cardHeight, @NonNull CardView cardWeight,
      @NonNull LinearProgressIndicator progressBMI, @NonNull RecyclerView rvHealthGoals,
      @NonNull RecyclerView rvHealthHistory, @NonNull TextView tvBMI,
      @NonNull TextView tvBMICategory, @NonNull TextView tvHealthGoalsTitle,
      @NonNull TextView tvHealthHistoryTitle, @NonNull TextView tvHealthMetricsTitle,
      @NonNull TextView tvHeight, @NonNull TextView tvWeight) {
    this.rootView = rootView;
    this.cardBMI = cardBMI;
    this.cardHeight = cardHeight;
    this.cardWeight = cardWeight;
    this.progressBMI = progressBMI;
    this.rvHealthGoals = rvHealthGoals;
    this.rvHealthHistory = rvHealthHistory;
    this.tvBMI = tvBMI;
    this.tvBMICategory = tvBMICategory;
    this.tvHealthGoalsTitle = tvHealthGoalsTitle;
    this.tvHealthHistoryTitle = tvHealthHistoryTitle;
    this.tvHealthMetricsTitle = tvHealthMetricsTitle;
    this.tvHeight = tvHeight;
    this.tvWeight = tvWeight;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHealthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHealthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_health, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHealthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardBMI;
      CardView cardBMI = ViewBindings.findChildViewById(rootView, id);
      if (cardBMI == null) {
        break missingId;
      }

      id = R.id.cardHeight;
      CardView cardHeight = ViewBindings.findChildViewById(rootView, id);
      if (cardHeight == null) {
        break missingId;
      }

      id = R.id.cardWeight;
      CardView cardWeight = ViewBindings.findChildViewById(rootView, id);
      if (cardWeight == null) {
        break missingId;
      }

      id = R.id.progressBMI;
      LinearProgressIndicator progressBMI = ViewBindings.findChildViewById(rootView, id);
      if (progressBMI == null) {
        break missingId;
      }

      id = R.id.rvHealthGoals;
      RecyclerView rvHealthGoals = ViewBindings.findChildViewById(rootView, id);
      if (rvHealthGoals == null) {
        break missingId;
      }

      id = R.id.rvHealthHistory;
      RecyclerView rvHealthHistory = ViewBindings.findChildViewById(rootView, id);
      if (rvHealthHistory == null) {
        break missingId;
      }

      id = R.id.tvBMI;
      TextView tvBMI = ViewBindings.findChildViewById(rootView, id);
      if (tvBMI == null) {
        break missingId;
      }

      id = R.id.tvBMICategory;
      TextView tvBMICategory = ViewBindings.findChildViewById(rootView, id);
      if (tvBMICategory == null) {
        break missingId;
      }

      id = R.id.tvHealthGoalsTitle;
      TextView tvHealthGoalsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthGoalsTitle == null) {
        break missingId;
      }

      id = R.id.tvHealthHistoryTitle;
      TextView tvHealthHistoryTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthHistoryTitle == null) {
        break missingId;
      }

      id = R.id.tvHealthMetricsTitle;
      TextView tvHealthMetricsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthMetricsTitle == null) {
        break missingId;
      }

      id = R.id.tvHeight;
      TextView tvHeight = ViewBindings.findChildViewById(rootView, id);
      if (tvHeight == null) {
        break missingId;
      }

      id = R.id.tvWeight;
      TextView tvWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvWeight == null) {
        break missingId;
      }

      return new FragmentHealthBinding((NestedScrollView) rootView, cardBMI, cardHeight, cardWeight,
          progressBMI, rvHealthGoals, rvHealthHistory, tvBMI, tvBMICategory, tvHealthGoalsTitle,
          tvHealthHistoryTitle, tvHealthMetricsTitle, tvHeight, tvWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
